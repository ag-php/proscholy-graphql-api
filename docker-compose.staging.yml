version: "3"
services:
  web:
    build:
      context: ./docker/setup/web
      dockerfile: Dockerfile
    volumes:
      - ".:/var/www/html"
      - "./docker/config/cron.d:/etc/cron.d"
      - "./docker/config/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini"
    entrypoint: "bash ./docker/setup/web/entrypoint_web_prod.sh"
    networks:
      - bcloud-network-staging
    restart: always
    depends_on:
      - db
    dns:
      - 8.8.8.8
      - 4.4.4.4

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "23306:3306"
    expose:
      # Opens port 3306 on the container
      - "23306"
      # Where our data will be persisted
    volumes:
      - ./docker/data/databases:/var/databases
      - ./docker/data/mysql:/var/lib/mysql
    networks:
      - bcloud-network-staging

  nginx:
    image: "nginx:1.17.3"
    ports:
      - "20080:80"
      - "20443:443"
    links:
      - "web"
    volumes:
      - ".:/var/www/html"
      - "./docker/config/nginx_dev:/etc/nginx/conf.d"
      - "./docker/logs/nginx:/var/log/nginx"
    networks:
      - bcloud-network-staging
    restart: always

  adminer:
    image: adminer
    restart: always
    ports:
      - 28080:8080
    networks:
      - bcloud-network-staging

  elasticsearch:
    build:
      context: ./docker/setup/elastic
      dockerfile: Dockerfile
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
    volumes:
      - ./data/elastic:/etc/elasticsearch/data
      - ./config/elastic/elasticsearch.yml:/var/zpevnik/elasticsearch/elasticsearch.yml
    ports:
      - "29200:9200"
    networks:
      - bcloud-network-staging
    restart: always

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.2.0
  #   ports:
  #     - "25601:5601"
  #   networks:
  #     - bcloud-network-staging
  #   depends_on:
  #     - elasticsearch
  # cerebro:
  #   image: yannart/cerebro:0.8.1
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - bcloud-network-staging
  #   depends_on:
  #     - elasticsearch

networks:
  bcloud-network-staging:
