

type SongbookRecord {
    id: ID! @field(resolver: "App\\GraphQL\\Types\\SongbookRecordType@id")
    number: String @field(resolver: "App\\GraphQL\\Types\\SongbookRecordType@number")
    placeholder: String @field(resolver: "App\\GraphQL\\Types\\SongbookRecordType@placeholder")
    song_lyric: SongLyric @field(resolver: "App\\GraphQL\\Types\\SongbookRecordType@song_lyric")
    songbook: Songbook @field(resolver: "App\\GraphQL\\Types\\SongbookRecordType@songbook")
}


type PublicUser {
    id: ID!
    name: String
    email: String
    playlists: [Playlist]
}


type Playlist {
    id: ID!
    name: String
    #""" todo: custom resolver with ordering the list"""
    song_lyrics: [SongLyric]
}

type SongLyricPaginator {
    data: [SongLyric!]! @field(resolver: "Nuwave\\Lighthouse\\Pagination\\PaginatorField@dataResolver")
    paginatorInfo: PaginatorInfo! @field(resolver: "Nuwave\\Lighthouse\\Pagination\\PaginatorField@paginatorInfoResolver")
}
