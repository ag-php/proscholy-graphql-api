"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

#import types.graphql
#import inputs.graphql

type Query {
    users: [User!]! @all
    user(id: ID @eq): User @find
    authors(
        search_string: String
        order_abc: Boolean
    ): [Author!]!
    song_lyrics(
        only_apk: Boolean
        search_string: String
        is_published: Boolean
        is_approved_by_author: Boolean
        has_lyrics: Boolean
        has_authors: Boolean
        has_tags: Boolean
        has_chords: Boolean
        order_abc: Boolean
    ): [SongLyric!]!
    externals (
        type: Int
        is_todo: Boolean
    ): [External!]! @all
    files (
        type: Int
        is_todo: Boolean
    ): [File!]! @all
    tags(type: Int @eq): [Tag] @all
    me: User @auth

    author(id: ID! @eq): Author @find
}

type Mutation @group(middleware: []) {
    delete_author(id: ID!): Author @delete
    delete_external(id: ID!): External @delete
    delete_file(id: ID!): File @delete
    delete_song_lyric(id: ID!): SongLyric @delete
    delete_tag(id: ID!): Tag @delete

    update_author(input: UpdateAuthorInput!): Author @update(flatten: true)
}