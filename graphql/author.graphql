type Author {
    id: ID!
    name: String!
    description: String
    type: Int
    type_string: String
    type_string_values: [String]
    email: String
    url: String
    visits: Int
    public_url: String
    song_lyrics: [SongLyric] @belongsToMany
    externals: [External] @belongsToMany
    files: [File] @belongsToMany
    members: [Author] @belongsToMany
    memberships: [Author] @belongsToMany
}

extend type Query {
    authors(
        search_string: String
        order_abc: Boolean
        type: Int
    ): [Author!]! #  see App/GraphQL/Queries/Authors.php

    author(id: ID! @eq): Author @find
}

extend type Mutation @middleware(checks: ["auth:api"]) {
    delete_author(id: ID!): Author @delete
    update_author(input: UpdateAuthorInput! @spread): Author @update
}


input UpdateAuthorInput {
    id: ID!
    name: String @rules(apply: ["required", "min:2"], messages: { 
            required: "Jméno autora nesmí zůstat prázdné", 
            min: "Jméno autora by mělo mít aspoň 2 znaky"})
    type: Int!
    description: String
    members: SyncAuthorsRelation
}

input SyncAuthorsRelation {
  create: [CreateAuthorInput!]
  sync: [ID!]
}

input CreateAuthorInput {
  name: String!
}