type Tag {
    id: ID!
    name: String
    type: Int
    parent_tag: Tag @belongsTo
    child_tags: [Tag] @hasMany
    description: String
}

extend type Query {
    tags(type: Int @eq): [Tag] @all
}

enum Taggable {
  SONG_LYRIC @enum(value: "App\\SongLyric")
  AUTHOR @enum(value: "App\\Author")
  EXTERNAL @enum(value: "App\\External")
  FILE @enum(value: "App\\File")
}

extend type Mutation {
    delete_tag(id: ID!): Tag @delete

    sync_create_tags(input: SyncCreateTagsRelation!, tags_type: Int!, taggable: Taggable!, taggable_id: Int!): [Tag]
    # sync_tags(input: SyncTagsRelation!, type: Int!, taggable: String!, taggable_id: Int!)
}



input SyncTagsRelation {
    sync: [ID!]
}

input SyncCreateTagsRelation {
    create: [CreateTagInput!]
    sync: [ID!]
}

input CreateTagInput {
    name: String!
}
