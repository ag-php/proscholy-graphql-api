# source: http://localhost:8000/graphql
# timestamp: Fri May 03 2019 18:49:05 GMT+0200 (CEST)

"""An author model"""
type Author {
  """The id of the song"""
  id: Int!

  """The name of the song"""
  name: String

  """Author's description"""
  description: String

  """Author's type"""
  type: Int

  """Author's type"""
  type_string: String
}

"""An external model"""
type External {
  """The id of the external"""
  id: Int!

  """The parsed public name of the external"""
  public_name: String

  """multiple types"""
  type: Int

  """multiple types"""
  type_string: String
}

"""A file model"""
type File {
  """The id of the file"""
  id: Int!

  """The public name of the file"""
  public_name: String

  """The download url of the file"""
  download_url: String

  """multiple files"""
  type: Int

  """multiple files"""
  type_string: String
}

type Mutation {
  delete_song_lyric(id: Int): SongLyric
  delete_author(id: Int): Author
  delete_external(id: Int): External
  delete_file(id: Int): File
  delete_tag(id: Int): Tag
}

type Query {
  """
  A Query for the SongLyric model, without args returns all available SongLyrics. 
  		Use args is_published:true, is_approved_by_author:true and has_lyrics:true for use in apk
  """
  song_lyrics(
    id: Int

    """Whether SongLyric has been reviewed by editors"""
    is_published: Boolean

    """Whether SongLyric has been approved by its author for public use"""
    is_approved_by_author: Boolean

    """Whether SongLyric has some lyrics"""
    has_lyrics: Boolean

    """Whether SongLyric has some authors associated"""
    has_authors: Boolean

    """Whether SongLyric has chors filled in the text"""
    has_chords: Boolean

    """Whether SongLyric has tags associated"""
    has_tags: Boolean

    """
    Shortcut - wheter SongLyric is to be used in apk. Only for use with only_apk:true
    """
    only_apk: Boolean

    """Use algolia for searching, warning - use this as an only parameter"""
    search_string: String
  ): [SongLyric]

  """A Query for the Author model"""
  authors(id: Int): [Author]

  """A Query for Tag model"""
  tags(id: Int, type: Int): [Tag]

  """A Query for External model"""
  externals(
    id: Int
    type: Int

    """Whether External doesn't have any author or song associated"""
    is_todo: Boolean
  ): [External]

  """A Query for File model"""
  files(
    id: Int
    type: Int

    """Whether File doesn't have any author or song associated"""
    is_todo: Boolean
  ): [File]
}

"""An abstract Song model"""
type Song {
  """The id of the song"""
  id: Int!

  """The name of the song"""
  name: String

  """Child SongLyric models"""
  song_lyrics(
    """Id of the author"""
    id: Int

    """Filtering by the is_original attribute"""
    is_original: Boolean
  ): [SongLyric]
}

"""A song lyric model"""
type SongLyric {
  """The id of the song"""
  id: Int!

  """The name of the song"""
  name: String

  """The public url of the song"""
  public_url: String

  """The lyrics without chords"""
  lyrics_no_chords: String

  """
  0 means this version is translated from an original. 1 means this version is original.
  """
  is_original: Boolean

  """Approval by author of the song"""
  is_approved_by_author: Boolean

  """Published and reviewed by editors"""
  is_published: Boolean

  """
  A language code, possible values: ["cs","sk","en","la","pl","de","fr","es","it","sv","he","cu","mixed"]
  """
  lang: String

  """Datetime of last updating"""
  updated_at: String

  """Authors of the song"""
  authors(
    """Id of the author"""
    id: Int
  ): [Author]

  """Song tags"""
  tags(
    """Type of the tag"""
    type: Int
  ): [Tag]

  """Song externals"""
  externals(
    """Song's externals"""
    type: Int
  ): [External]

  """Song externals"""
  scoreExternals: [External]

  """Song externals"""
  spotifyTracks: [External]

  """Song externals"""
  soundcloudTracks: [External]

  """Song externals"""
  youtubeVideos: [External]

  """Song externals"""
  scoreFiles: [File]

  """An abstract Song model that has one or more child SongLyric models"""
  song: Song
}

"""A tag model"""
type Tag {
  """The id of the tag"""
  id: Int!

  """The name of the tag"""
  name: String

  """Tag's description"""
  description: String

  """0 -> unofficial, 1 -> official aka liturgy."""
  type: Int

  """Null or parent tag model"""
  parent_tag: Tag

  """List of child tags"""
  child_tags: [Tag]
}
